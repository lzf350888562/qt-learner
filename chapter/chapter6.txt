6.1 数组
数组是一组有序数据的集合。数组中各数据的排列是有一定规律的，下标代表数据在数组中的序号。用一个数组名和下标惟一确定数组中的元素。数组中的每一个元素都属于同一个数据类型
6.1.1怎样定义一维数组
	一维数组是数组中最简单的。它的元素只需要用数组名加一个下标，就能惟一确定。要使用数组，必须在程序中先定义数组
	定义一维数组的一般形式为:
		类型符数组名[常量表达式];
	数组名的命名规则和变量名相同，如int a[10];
6.1.2怎样引用一维数组元素
	在定义数组并对其中各元素赋值后，就可以引用数组中的元素。注意:只能引用数组元素而不能一次整体调用整个数组全部元素的值。
	引用数组元素的表示形式为:数组名[下标]，如 a[0]=a[5]+a[7]-a[2*3]
	例：有10个地区的面积，要求对它们按由小到大的顺序排列。
	解题思路:排序的规律有两种:一种是“升序”，从小到大;另一种是“降序”，从大到小。把题目抽象为:“对n个数按升序排序”。采用起泡法排序。
	int a[10];
	int i,j,t;
	printf("input 10 numbers :\n");
	for (i=0;i<10;i++) 
	scanf("%d",&a[i]);
	printf("\n");
	for(j=0;j<9:j++)
		for(i=0;i<9-j;i++)
		if (a[i]>a[i+1])
			{t=a[i];a[i]=a[i+1];a[i+1]=t;}
	printf("the sorted numbers :\n");
	for(i=0;i<10;i++)
	printf("%d ",a[i]);
	printf("\n");
6.2.1怎样定义二维数组
	二维数组定义的一般形式为:类型符数组名[常量表达式][常量表达式];
	如: float a[3][4].b[5][10];
	二维数组可被看作是一种特殊的一维数组:它的元素又是一个一维数组。例如，把a看作是一个一维数组，它有3个元素: a[0]a[1]、a[2]，每个元素又是一个包含4个元素的一维数组
6.2.2怎样引用二维数组的元素
	二维数组元素的表示形式为:数组名[下标][下标]

	例：将一个二维数组的行列元素互换存到另一个二维数组中
	#include <stdio.h>
	int main()
	{
	int a[2][3]={{1,2,3},{4,5,6}};
	int b[3][2],i,j;
	printf("array a: \n");
	for (i=0;i<=1;i++)
	{
		for (j=0;j<=2:;j++)
		{
			printf("%5d",a[i][);
			b[i][i]=a[i][];
		}
		printf("In");
	}
	printf("array b:\n");
	for (i=0;i<=2;i++)
	{
		for(j-0;j<=1;j++)
			printf("%5d",b[i][]);
		printf("n");
	}
	return 0;
	}
6.3.1字符串和字符串结束际志
	在C语言中，是将字符串作为字符数组来处理的;关心的是字符串的有效长度而不是字符数组的长度;为了测定字符串的实际长度，C语言规定了字符串结束标志’'。(’\0’代表ASCII码为0的字符，从ASCII 码表可以查到，ASCII码为0的字符不是一个可以显示的字符，而是一个“空操作符”，即它什么也不做;用它作为字符串结束标志不会产生附加的操作或增加有效字符，只起一个供辨别的标志。)
6.3.2字符数组的输入输出
	字符数组的输入输出可以有两种方法:逐个字符输入输出（%c);整个字符串一次输入输出(%s)。
	输出的字符中不包括结束符’\0';用%s输出字符串时，printf函数中的输出项是字符数组名，不是数组元素名。如果一个字符数组中包含多个’\0'，则遇第一个’O’时输出就结束。可以用scanf 函数输入一个字符串。scanf函数中的输入项c是已定义的字符数组名，输入的字符串应短于已定义的字符数组的长度。
6.3.3善于使用字符串处理函数
	在C函数库中提供了一些用来专门处理字符串的函数，使用方便
	1.puts函数---输出字符串的函数，其一般形式为: puts(字符数组)，作用是将一个字符串输出到终端。
	2. gets函数----输入字符串的函数，其一般形式为: gets(字符数组)，作用是输入一个字符串到字符数组
	3. strcat函数----字符串连接函数，其一般形式为: strcat(字符数组1，字符数组2)，其作用是把两个字符串连接起来，把字符串2接到字符串1的后面，结果放在字符数组1中。使用字符串函数时在程序开头用Finclude <string.h>
	4. strcpy和 strncpy函数-字符串复制，strcpy一般形式为: strcpy(字符数组1,字符串2)，作用是将字符串2复制到字符数组1中去。
	可以用strncpy函数将字符串2中前面n个字符复制到字符数组1中去;
	strncpy(str1，str2，2):作用是将str2中最前面2个字符复制到str1中，取代str1中原有的最前面2个字符;复制的字符个数n不应多于str1中原有的字符。
	5. strcmp函数--字符串比较函数，其一般形式为: strcmp(字符串1，字符串2)，作用是比较字符串1和字符串2。
	6. strlen函数---测字符串长度的函数，其一般形式为: strlen字符数组)，它是测试字符串长度的函数，函数的值为字符串中的实际长度。
	7. strlwr函数---转换为小写的函数，其一般形式为: strlwr (字符串)，函数的作用是将字符串中大写字母换成小写字母。
	8. strupr 函数----转换为大写的函数，其一般形式为: strupr字符串)，函数的作用是将字符串中小写字母换成大写
字母。
6.3.4字符数组应用举例
	例1输入一行字符，统计其中有多少个单词，单词之间用空格分隔
		char string[81],c; int i,num=O,word=O;
		gets(string);
		for (i=0;(c=string[i])!=’\0’;i++)
		if(c=-’ ’) 
		word=0;
		else if(word==0){
		word=l;num++;}
		printf("%d words\n”,num);
	例2有3个字符串,要求找出其中最大者。
		#include<stdio.h>
		#include<string.h>int main ( )
		{	char str[3][10];
			 char string[10]: 
			int i;
			for (i=0;i<3;i++)
			gets (str[i]);
			if strcmp(str[0],str[1])>-O)
				strcpy(string,str[0]);
			else	strcpy(string,str[1]);
			if strcmp(str[2],string)>0)
			strcpy(string,str[2]);
			printf("'nthe largest:ln%s\n",string);
			return 0;
		}




